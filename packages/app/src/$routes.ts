// file generated by 'generateRoutes.js'

import { createRouter } from "radix3";
import IndexPage, { loader as loader$0 } from "./routes/index";
import $dynamicPage, { loader as loader$1 } from "./routes/$dynamic";

export interface Layout {
  id: string;
  layoutPath: string;
  component?: (props: { children: any }) => any;
  loader?: (...args: any[]) => any | Promise<any>;
}

export interface Route {
  id: string;
  routePath: string;
  component?: () => any;
  loader?: (...args: any[]) => any | Promise<any>;
  layouts?: Layout[];
}

export interface ErrorRoute {
  id: string;
  routePath: string;
  component: () => any;
}

export interface ServerAction {
  id: string;
  actionPath: string;
  functionName: string;
  action: (...args: any[]) => Promise<any>;
}

const router = createRouter<Route>({
  routes: {
    "/": {
      id: "/",
      component: IndexPage,
      routePath: "/index",
      loader: loader$0,
      layouts: [],
    },
    "/:dynamic": {
      id: "/:dynamic",
      component: $dynamicPage,
      routePath: "/$dynamic",
      loader: loader$1,
      layouts: [],
    },
  },
});

const errorRouter = createRouter<ErrorRoute>({ routes: {} });

const actionRouter = createRouter<ServerAction>({ routes: {} });

export const matchRoute = (pathname: string) => router.lookup(pathname);

export const matchErrorRoute = (pathname: string) =>
  errorRouter.lookup(pathname);

export const matchAction = (id: string) => actionRouter.lookup(id);
